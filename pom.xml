<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.qthegamep</groupId>
    <artifactId>pattern.project2</artifactId>
    <version>1.1.14</version>
    <packaging>jar</packaging>

    <name>pattern.project2</name>

    <properties>
        <!-- Java -->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <mainClass>com.qthegamep.pattern.project2.Application</mainClass>

        <!-- Compiler plugin -->
        <compiler-plugin.version>3.6.1</compiler-plugin.version>

        <!-- Surefire plugin -->
        <surefire-plugin.version>2.22.1</surefire-plugin.version>
        <surefire-plugin.testFailureIgnore>false</surefire-plugin.testFailureIgnore>

        <!-- JAR plugin -->
        <jar-plugin.version>3.1.0</jar-plugin.version>
        <jar-plugin.addClasspath>true</jar-plugin.addClasspath>
        <jar-plugin.classpathPrefix>lib/</jar-plugin.classpathPrefix>

        <!-- Dependency plugin -->
        <dependency-plugin.version>2.6</dependency-plugin.version>
        <dependency-plugin.overWriteReleases>false</dependency-plugin.overWriteReleases>
        <dependency-plugin.overWriteSnapshots>false</dependency-plugin.overWriteSnapshots>
        <dependency-plugin.overWriteIfNewer>true</dependency-plugin.overWriteIfNewer>

        <!-- AspectJ plugin -->
        <aspectj-plugin.version>1.11</aspectj-plugin.version>
        <aspectj-plugin.complianceLevel>1.8</aspectj-plugin.complianceLevel>
        <aspectj-plugin.source>1.8</aspectj-plugin.source>
        <aspectj-plugin.target>1.8</aspectj-plugin.target>
        <aspectj-plugin.showWeaveInfo>true</aspectj-plugin.showWeaveInfo>
        <aspectj-plugin.verbose>true</aspectj-plugin.verbose>
        <aspectj-plugin.xlint>ignore</aspectj-plugin.xlint>
        <aspectj-plugin.encoding>UTF-8</aspectj-plugin.encoding>

        <!-- JaCoCo plugin -->
        <jacoco-plugin.version>0.8.2</jacoco-plugin.version>

        <!-- GMavenPlus plugin -->
        <gmavenplus-plugin.version>1.6.2</gmavenplus-plugin.version>
        <gmavenplus-plugin.directory>src/test</gmavenplus-plugin.directory>

        <!-- Sonar plugin -->
        <sonar-plugin.version>3.5.0.1254</sonar-plugin.version>
        <sonar-plugin.jacoco.reportPath>${project.build.directory}/jacoco.exec</sonar-plugin.jacoco.reportPath>
        <sonar.language>java</sonar.language>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.coverage.exclusions>
            **/model/**/*,
            **/exception/**/*,
            **/log/**/*,
            **/config/**/*,
            **/util/**/*,
            **/Meters.java,
            **/Application.java
        </sonar.coverage.exclusions>
        <sonar.host.url>http://test.url/</sonar.host.url>

        <!-- Log -->
        <log.logback.version>1.2.3</log.logback.version>
        <log.logback-json-classic.version>0.1.5</log.logback-json-classic.version>
        <log.logback-gelf.version>2.0.0</log.logback-gelf.version>
        <log.logstash-logback-encoder.version>5.3</log.logstash-logback-encoder.version>

        <!-- AOP -->
        <aop.aspectjrt.version>1.8.13</aop.aspectjrt.version>
        <aop.aspectjweaver.version>1.8.13</aop.aspectjweaver.version>

        <!-- Server -->
        <server.jersey.version>2.28</server.jersey.version>

        <!-- JSON -->
        <json.jackson-dataformat-xml.version>2.9.10</json.jackson-dataformat-xml.version>

        <!-- Mapper -->
        <mapper.mapstruct.version>1.3.1.Final</mapper.mapstruct.version>

        <!-- DB -->
        <db.mongo-java-driver.version>3.5.0</db.mongo-java-driver.version>
        <db.mongodb-driver-async.version>3.5.0</db.mongodb-driver-async.version>
        <db.jedis.version>2.9.0</db.jedis.version>

        <!-- Swagger -->
        <swagger.version>2.0.6</swagger.version>

        <!-- Prometheus -->
        <prometheus.simpleclient.version>0.8.0</prometheus.simpleclient.version>
        <prometheus.simpleclient_servlet.version>0.8.0</prometheus.simpleclient_servlet.version>
        <prometheus.micrometer-registry-prometheus.version>1.3.0</prometheus.micrometer-registry-prometheus.version>

        <!-- Test -->
        <test.junit.version>4.12</test.junit.version>
        <test.spock-core.version>1.3-groovy-2.5</test.spock-core.version>
        <test.assertj-core.version>3.11.1</test.assertj-core.version>
        <test.mockito-core.version>2.23.0</test.mockito-core.version>
        <test.jersey-test-framework.version>2.28</test.jersey-test-framework.version>
        <test.org-jacoco-agent.version>0.8.2</test.org-jacoco-agent.version>
        <db.de.flapdoodle.embed.mongo.version>2.2.0</db.de.flapdoodle.embed.mongo.version>
        <db.embedded-redis.version>0.6</db.embedded-redis.version>

        <!-- Others -->
        <jmx-prometheus-javaagent.version>0.11.0</jmx-prometheus-javaagent.version>
        <commons-codec.version>1.9</commons-codec.version>
        <cdi-api.version>2.0.SP1</cdi-api.version>
    </properties>

    <build>
        <plugins>
            <!-- Compiler plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapper.mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- Surefire plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <testFailureIgnore>${surefire-plugin.testFailureIgnore}</testFailureIgnore>
                </configuration>
            </plugin>

            <!-- JAR plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>${jar-plugin.addClasspath}</addClasspath>
                            <classpathPrefix>${jar-plugin.classpathPrefix}</classpathPrefix>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- Dependency plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${dependency-plugin.version}</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                    <overWriteReleases>${dependency-plugin.overWriteReleases}</overWriteReleases>
                    <overWriteSnapshots>${dependency-plugin.overWriteSnapshots}</overWriteSnapshots>
                    <overWriteIfNewer>${dependency-plugin.overWriteIfNewer}</overWriteIfNewer>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- JaCoCo plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-plugin.version}</version>
                <configuration>
                    <destFile>${sonar-plugin.jacoco.reportPath}</destFile>
                    <append>true</append>
                    <excludes>
                        <exclude>**/model/**/*</exclude>
                        <exclude>**/exception/**/*</exclude>
                        <exclude>**/log/**/*</exclude>
                        <exclude>**/config/**/*</exclude>
                        <exclude>**/util/**/*</exclude>
                        <exclude>**/Meters.class</exclude>
                        <exclude>**/Application.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- GMavenPlus plugin -->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>${gmavenplus-plugin.version}</version>
                <configuration>
                    <testSources>
                        <testSource>
                            <directory>${gmavenplus-plugin.directory}</directory>
                            <includes>
                                <include>**/*.groovy</include>
                            </includes>
                        </testSource>
                    </testSources>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>addTestSources</goal>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Sonar plugin -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-plugin.version}</version>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Log -->
        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${log.logback.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/ch.qos.logback.contrib/logback-json-classic -->
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-json-classic</artifactId>
            <version>${log.logback-json-classic.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/de.siegmar/logback-gelf -->
        <dependency>
            <groupId>de.siegmar</groupId>
            <artifactId>logback-gelf</artifactId>
            <version>${log.logback-gelf.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${log.logstash-logback-encoder.version}</version>
        </dependency>

        <!-- AOP -->
        <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjrt -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aop.aspectjrt.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aop.aspectjweaver.version}</version>
        </dependency>

        <!-- Server -->
        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.containers/jersey-container-grizzly2-servlet -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-servlet</artifactId>
            <version>${server.jersey.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2 -->
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${server.jersey.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${server.jersey.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.ext/jersey-bean-validation -->
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-bean-validation</artifactId>
            <version>${server.jersey.version}</version>
        </dependency>

        <!-- JSON -->
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>${json.jackson-dataformat-xml.version}</version>
        </dependency>

        <!-- Mapper -->
        <!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapper.mapstruct.version}</version>
        </dependency>

        <!-- DB -->
        <!-- https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>${db.mongo-java-driver.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mongodb/mongodb-driver-async -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongodb-driver-async</artifactId>
            <version>${db.mongodb-driver-async.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${db.jedis.version}</version>
        </dependency>

        <!-- Swagger -->
        <!-- https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-jaxrs2 -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <!-- Prometheus -->
        <!-- https://mvnrepository.com/artifact/io.prometheus/simpleclient -->
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient</artifactId>
            <version>${prometheus.simpleclient.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.prometheus/simpleclient_servlet -->
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_servlet</artifactId>
            <version>${prometheus.simpleclient_servlet.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${prometheus.micrometer-registry-prometheus.version}</version>
        </dependency>

        <!-- Test -->
        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${test.junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.spockframework/spock-core -->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${test.spock-core.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${test.assertj-core.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${test.mockito-core.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.test-framework/jersey-test-framework-core -->
        <dependency>
            <groupId>org.glassfish.jersey.test-framework</groupId>
            <artifactId>jersey-test-framework-core</artifactId>
            <version>${test.jersey-test-framework.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.test-framework.providers/jersey-test-framework-provider-grizzly2 -->
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <version>${test.jersey-test-framework.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.jacoco/org.jacoco.agent -->
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>${test.org-jacoco-agent.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/de.flapdoodle.embed/de.flapdoodle.embed.mongo -->
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
            <version>${db.de.flapdoodle.embed.mongo.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.github.kstyrc/embedded-redis -->
        <dependency>
            <groupId>com.github.kstyrc</groupId>
            <artifactId>embedded-redis</artifactId>
            <version>${db.embedded-redis.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Others -->
        <!-- https://mvnrepository.com/artifact/io.prometheus.jmx/jmx_prometheus_javaagent -->
        <dependency>
            <groupId>io.prometheus.jmx</groupId>
            <artifactId>jmx_prometheus_javaagent</artifactId>
            <version>${jmx-prometheus-javaagent.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.enterprise/cdi-api -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${cdi-api.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!-- AOP profile -->
        <profile>
            <id>AOP</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- AspectJ plugin -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>aspectj-maven-plugin</artifactId>
                        <version>${aspectj-plugin.version}</version>
                        <configuration>
                            <complianceLevel>${aspectj-plugin.complianceLevel}</complianceLevel>
                            <source>${aspectj-plugin.source}</source>
                            <target>${aspectj-plugin.target}</target>
                            <showWeaveInfo>${aspectj-plugin.showWeaveInfo}</showWeaveInfo>
                            <verbose>${aspectj-plugin.verbose}</verbose>
                            <Xlint>${aspectj-plugin.xlint}</Xlint>
                            <encoding>${aspectj-plugin.encoding}</encoding>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>
                                    <goal>test-compile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Skip all test profile -->
        <profile>
            <id>skip-all-test</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Surefire plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${surefire-plugin.version}</version>
                        <configuration>
                            <testFailureIgnore>${surefire-plugin.testFailureIgnore}</testFailureIgnore>
                            <excludes>
                                <exclude>**/*UnitTest*</exclude>
                                <exclude>**/*IntegrationTest*</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Skip integration test profile -->
        <profile>
            <id>skip-integration-test</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Surefire plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${surefire-plugin.version}</version>
                        <configuration>
                            <testFailureIgnore>${surefire-plugin.testFailureIgnore}</testFailureIgnore>
                            <excludes>
                                <exclude>**/*IntegrationTest*</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Skip unit test profile -->
        <profile>
            <id>skip-unit-test</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Surefire plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${surefire-plugin.version}</version>
                        <configuration>
                            <testFailureIgnore>${surefire-plugin.testFailureIgnore}</testFailureIgnore>
                            <excludes>
                                <exclude>**/*UnitTest*</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
